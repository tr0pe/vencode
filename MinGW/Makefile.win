TARGET		=	vencode.exe
CC		=	i686-w64-mingw32-gcc
WINDRESS	=	i686-w64-mingw32-windres
SRCDIR		=	src
OBJDIR		=	obj
RES		=	$(OBJDIR)/vencode_private.res
RC		=	MinGW/resources/vencode_private.rc
LIBS		=	-lpng -lpthread -lz -fstack-protector -static
OBJS		=	$(OBJDIR)/args.o \
			$(OBJDIR)/vencode.o \
			$(OBJDIR)/util.o \
			$(OBJDIR)/bmp.o \
			$(RES)

SRCLIB		=	MinGW/lib
INCLUDE		=	-Iinclude -IMinGW/include
CFLAGS		=	-mtune=i686 -static-libgcc -O3 \
			-std=gnu99 $(INCLUDE) -Wall
FFMPEG		=	ffmpeg-3.4.1_LTO

-include $(OBJDIR)/*.d

all: $(TARGET)

$(OBJDIR)/%.o : $(SRCDIR)/%.c
	@mkdir -p $(OBJDIR)
	$(CC) -c $(CFLAGS) $< -o $@

$(TARGET): $(OBJS) $(FFMPEG)
	$(CC) $(OBJS) -o $(TARGET) -L$(SRCLIB) $(LIBS)


$(FFMPEG) : MinGW/ffmpeg-3.4.1_LTO.tar.xz
	xz -d < MinGW/ffmpeg-3.4.1_LTO.tar.xz | tar xf -

$(RES): $(RC)
	$(WINDRESS) -i $(RC) -F pe-i386 --input-format=rc -o $(RES) -O coff

.PHONY: clean
clean:
	rm -rf $(OBJDIR)
	rm -f  $(TARGET) 
	rm -rf $(FFMPEG)
